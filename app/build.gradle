apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.aaronhalbert.nosurfforreddit"
        minSdkVersion 23
        targetSdkVersion 29
        multiDexEnabled true
        versionCode 7
        versionName "7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.generatedDensities = ['hdpi', 'xxhdpi']
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString(),
                             "room.incremental":"true"]
            }
        }

        buildConfigField "String", "SCHEME", '"https"'
        buildConfigField "String", "HOST", '"www.reddit.com"'
        buildConfigField "String", "REDDIT_AUTH_PATH", '"api/v1/authorize.compact"'
        buildConfigField "String", "REDDIT_URL_BASE", '"https://www.reddit.com"'
        buildConfigField "String", "AUTH_URL_BASE", '"https://www.reddit.com/api/v1/authorize.compact"'
        buildConfigField "String", "CLIENT_ID", '"jPF59UF5MbMkWg"'
        buildConfigField "String", "REDIRECT_URI", '"nosurfforreddit://oauth"'
        buildConfigField "String", "API_BASE_URL", '"https://oauth.reddit.com/"'
        buildConfigField "String", "OAUTH_BASE_URL", '"https://www.reddit.com/api/v1/access_token"'
        buildConfigField "String", "APP_ONLY_GRANT_TYPE", '"https://oauth.reddit.com/grants/installed_client"'
        buildConfigField "String", "USER_AGENT", '"User-Agent: android:com.aaronhalbert.nosurfforreddit:v7 (by /u/Suspicious_Advantage)"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildToolsVersion '29.0.3'

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    namespace 'com.aaronhalbert.nosurfforreddit'
}

dependencies {
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.google.android.material:material:1.3.0-alpha02'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    def glide_version = '4.11.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    def dagger2_version = '2.29.1'
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"

    def room_version = '2.2.5'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //def leak_canary_version = '2.2'
    //debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"

    def multidex_version = '2.0.1'
    implementation "androidx.multidex:multidex:$multidex_version"

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-inline:3.5.13'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    androidTestImplementation 'org.hamcrest:hamcrest-library:2.2'
}

repositories {
    mavenCentral()
}
